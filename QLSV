#include <iostream>
#include <vector>
#include <algorithm>
#include <sstream>
#include <string>
#include <fstream>

#define Doc ofstream f("QLSV")
#define Ghi ifstream f("QLSV")
#define Ket f.close()
using namespace std;


struct SV {
    string ten,mssv,lop;
    float diem1,diem2;

    void Xuat() {
        cout << "ho va ten: " << ten << endl;
        cout << "mssv: " << mssv << endl;
        cout << "lop: " << lop << endl;
        cout << "diem toan: " << diem1 << endl;
        cout << "diem tin: " << diem2 << endl;
    }

    void Nhap() {
        cout << "Nhap ho va ten: ";
        getline(cin,ten);

        cout << "Nhap mssv: ";
        getline(cin,mssv);

        cout << "lop: ";
        getline(cin,lop);

        cout << "diem toan: ";
        cin >> diem1;

        cout << "diem tin: ";
        cin >> diem2;
    }
};

void Xuat_ds(SV a[], int n) {
    cout << endl;
    cout << "Xuat ds sinh vien\n";
    for (int i = 0 ; i < n ; i++) {
        a[i].Xuat();
        cout << endl;
    }
}

void Tim_mssv(SV a[], int n) {
    string mssv;

    cout << "Ghi mssv can tim: ";
    getline(cin,mssv);

    bool check = true;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].mssv.find(mssv) != string::npos) {
            a[i].Xuat();
            cout << endl;
            check = false;
        }
    }
    if (check == true) cout << "ko thay" << endl;
}

void Tim_lop(SV a[], int n) {
    string lop;

    cout << "Ghi lop can tim: ";
    getline(cin,lop);

    bool check = true;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].lop.find(lop) != string::npos) {
            a[i].Xuat();
            cout << endl;
            check = false;
        }
    }
    if (check == true) cout << "ko thay" << endl;
}

void Tim_ten(SV a[], int n) {
    string ten;

    cout << "Ghi ho hoac ten can tim: ";
    getline(cin,ten);
    bool check = true;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].ten.find(ten) != string::npos) {
            a[i].Xuat();
            cout << endl;
            check = false;
        }
    }
    if (check == true) cout << "ko thay" << endl;
}

vector <string> Chuyen_doi(string name) {
    vector <string> s;
    stringstream ss;
    ss << name;
    string tmp;
    while(ss >> tmp) {
        s.push_back(tmp);
    }
    return s;
}
bool check (SV a, SV b) {
    vector <string> v1 = Chuyen_doi(a.ten), v2 = Chuyen_doi(b.ten);
    int save1 = v1.size(), save2 = v2.size();
    if (v1.back() != v2.back()) return v1.back() < v2.back();
    for (int i = 0 ; i < min(save1,save2) ; i++) {
        if(v1[i] != v2[i]) return v1[i] < v2[i];
    }
    if (save1 < save2) return save1 < save2;
    if (v1[0] < v2[0]) return v1[0] < v2[0];

}

void Sap_Xep(SV a[] , int n) {
    sort(a, a + n, check);
}
void Toan_cao1(SV a[], int n) {
    float save = 0;
    cout << "hoc sinh co diem tin cao nhat: " << endl;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].diem1 > save) save = a[i].diem1;
    }
    for (int i = 0 ; i < n ; i++) {
        if (a[i].diem1 == save) {
            a[i].Xuat();
        }
    }
}

void Tin_cao1(SV a[], int n) {
    float save = 0;
    cout << "hoc sinh co diem tin cao nhat: " << endl;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].diem2 > save) save = a[i].diem2;
    }
    for (int i = 0 ; i < n ; i++) {
        if (a[i].diem2 == save) {
            a[i].Xuat();
        }
    }
}

bool check1(SV a, SV b) {
    return a.diem1 > b.diem2;
}
void Kt_toan(SV a[], int n) {
    vector <SV> v;
    cout << "hoc sinh co diem tin > 4: " << endl;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].diem1 >= 5) v.push_back(a[i]);
    }
    sort(v.begin(), v.end(), check1);
    for (SV x : v) {
        x.Xuat();
    }
}

bool check2(SV a, SV b) {
    return a.diem2 > b.diem2;
}

void Kt_tin(SV a[], int n) {
    vector <SV> v;
    cout << "hoc sinh co diem tin > 4: " << endl;
    for (int i = 0 ; i < n ; i++) {
        if (a[i].diem2 >= 5) v.push_back(a[i]);
    }
    sort(v.begin(), v.end(), check2);
    for (SV x : v) {
        x.Xuat();
    }
}

void Xuat_file (SV a[], int n) {
    Doc;
    for (int i = 0 ; i < n ; i++) {
        f << "ho va ten: "<< a[i].ten << endl;
        f << "mssv: "<< a[i].mssv << endl;
        f << "lop: " << a[i].lop << endl;
        f << "diem toan: " << a[i].diem1 << endl;
        f << "diem tin: " << a[i].diem2 << endl;
        f << endl;
    }
    Ket;
}
int main () {
    int n = 0;
    SV a[1000];

    int lc;
    while(lc != 13) {
        cout << endl;
        cout << "1.Nhap thong tin sv \n";
        cout << "2.Xuat danh sach \n";
        cout << "3.Tim mssv \n";
        cout << "4.Tim lop \n";
        cout << "5.Tim ten \n";
        cout << "6.Sap xep theo ten \n";
        cout << "7.Xuat toan cao nhat \n";
        cout << "8.Xuat tin cao nhat \n";
        cout << "9.Xuat toan tren 4 \n";
        cout << "10.Xuat tin tren 4 \n";
        cout << "11.In file txt\n";
        cout << "12.xuat file txt\n";
        cout << "Lua chon menu: ";
        cin >> lc;
        cin.ignore();
        cout << endl;

        switch (lc) {
            case 1: {
                a[n].Nhap();
                n++;
                break;
            }
            case 2: {
                Xuat_ds(a,n);
                break;
            }
            case 3: {
                Tim_mssv(a,n);
                break;
            }
            case 4: {
                Tim_lop(a,n);
                break;
            }
            case 5: {
                Tim_ten(a,n);
                break;
            }
            case 6: {
                Sap_Xep(a,n);
                cout << "Sap Xep thanh cong" << endl; 
                break;
            }
            case 7: {
                Toan_cao1(a,n);
                break;
            }
            case 8: {
                Tin_cao1(a,n);
                break;
            }
            case 9: {
                Kt_toan(a,n);
                break;
            }
            case 10: {
                Kt_tin(a,n);
                break;
            }
            case 11: {
                Xuat_file(a,n);
                cout << "Xuat file QLSV.txt thanh cong" << endl;
                break;
            }
            case 12: {
                string s;
                Ghi;
                cout << "In file QLSV.txt thanh cong" << endl;
                while(getline(f,s)) {
                    cout << s << endl;
                }
                Ket;
                break;
            }
        }
    }
}
